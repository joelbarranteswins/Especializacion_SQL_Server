
--SESION 7
GO
CREATE DATABASE SUPERMERCADO
GO
USE SUPERMERCADO
GO
CREATE TABLE DISTRITOS(
CODDIS CHAR(4)PRIMARY KEY ,
NOMDIS VARCHAR(25)NOT NULL
)
GO
CREATE TABLE CARGOS(
CODCAR CHAR(4)PRIMARY KEY,
NOCAR VARCHAR(30)NOT NULL)
GO
CREATE TABLE MARCAS(
CODMAR CHAR(4)PRIMARY KEY ,
NOMMAR VARCHAR(30)NOT NULL
)
GO
CREATE TABLE CATEGORIAS(
CODCAT CHAR(4) PRIMARY KEY,
NOMCAT VARCHAR(30)NOT NULL,
)
GO 
CREATE TABLE FORMA_PAGO(
CODFOR CHAR(4)PRIMARY KEY,
NOMFOR VARCHAR(25)NOT NULL
)
GO
CREATE TABLE LOCALES(
CODLOC CHAR(4)PRIMARY KEY,
NOMLOC VARCHAR(30)NOT NULL,
DIREC VARCHAR(40)NOT NULL,
CODDIS CHAR(4)FOREIGN KEY REFERENCES DISTRITOS(CODDIS),
TELEF VARCHAR(9)NOT NULL,
EMAIL VARCHAR(30)NOT NULL
)
GO
CREATE TABLE CLIENTES(
CODCLI CHAR(4)PRIMARY KEY ,
NOMCLI VARCHAR(40)NOT NULL,
DIREC VARCHAR(40)NOT NULL,
CODDIS CHAR(4)FOREIGN KEY REFERENCES DISTRITOS(CODDIS),
FNAC DATE NOT NULL,
SEXO CHAR(1)NOT NULL,
TELEF VARCHAR(9)NOT NULL
)
GO
CREATE TABLE PERSONAL(
CODPER CHAR(4)PRIMARY KEY,
NOMPER VARCHAR(40)NOT NULL,
DIREC VARCHAR(40)NOT NULL,
CODDIS CHAR(4) FOREIGN KEY REFERENCES DISTRITOS(CODDIS),
FNAC  DATE NOT NULL,
SEXO CHAR(1)NOT NULL,
CODCAR CHAR(4)FOREIGN KEY REFERENCES CARGOS(CODCAR),
SUELDO DECIMAL(7,2)NOT NULL
)
GO
CREATE TABLE PRODUCTOS(
CODPROD CHAR(6)PRIMARY KEY,
NOMPROD VARCHAR(40)NOT NULL,
CODCAR CHAR(4)FOREIGN KEY REFERENCES MarCAS(CODMAR),
CODCAT CHAR(4)FOREIGN KEY REFERENCES CATEGORIAS(CODCAT),
PRECIO DECIMAL(7,2)NOT NULL,
STOCK INT NOT NULL
)
GO
CREATE TABLE COMP_CABECERA(
CODCOM CHAR(6)PRIMARY KEY,
CODCLI CHAR(4)FOREIGN  KEY REFERENCES CLIENTES(CODCLI),
CODPER CHAR(4)FOREIGN  KEY REFERENCES PERSONAL(CODPER),
CODLOC CHAR(4)FOREIGN  KEY REFERENCES LOCALES(CODLOC),
CODFOR CHAR(4)FOREIGN  KEY REFERENCES FORMA_PAGO(CODFOR),
TIPO_COMP CHAR(1)NOT NULL,
FECHA DATE NOT NULL
)
GO
CREATE TABLE COMP_DETALLE(
CODCOM CHAR(6) FOREIGN KEY REFERENCES COMP_CABECERA(CODCOM),
CODPROD CHAR(6)FOREIGN KEY REFERENCES PRODUCTOS(CODPROD),
CANTIDAD INT NOT NULL,
PRECIO DECIMAL(7,2)NOT NULL,
DCTO DECIMAL(6,2)NOT NULL
)

--EJERCICIO 1

GO
CREATE TRIGGER GRABA_MARCA ON [dbo].[MARCAS]
	FOR INSERT
		AS
		PRINT 'SE GRABO UNA NUEVA MARCA'

GO

INSERT INTO MARCAS VALUES('M001','REXONA')

--EJERCICIO 2

GO
CREATE TRIGGER MODIFICA_MARCA on [dbo].[MARCAS]
	FOR UPDATE
	AS
		PRINT 'SE MODIFICO UNA MARCA'
GO

UPDATE MARCAS SET NOMMAR='ROSAS Y LIMON' WHERE CODMAR='M001'

SELECT * FROM MARCAS
GO
--EJERCICIO 3

CREATE TRIGGER MODIFICA_DISTRITO
ON [dbo].[DISTRITOS]
	FOR UPDATE
	AS
		DECLARE @COD CHAR(4),@NOM VARCHAR(25)
		SELECT @COD=CODDIS,@NOM=NOMDIS FROM deleted

		PRINT 'SE MODIFICO DISTRTTO:'
		PRINT 'DATOS ANTIGUOS'
		PRINT '-------------------------------'
		PRINT 'CODIGO	:' +@COD
		PRINT 'NOMBRE	:' +@NOM

		SELECT @COD=CODDIS,@NOM=NOMDIS FROM inserted

		PRINT 'DATOS NUEVOS'
		PRINT '--------------------------------'
		PRINT 'CODIGO	:'+@COD
		PRINT 'NOMBRE	:'+@NOM
GO

--EJEMPLO 3
GO
CREATE TRIGGER MODIFICA_PRECIO
ON [dbo].[PRODUCTOS]
	FOR UPDATE
	AS
		DECLARE @PREANT DECIMAL(7,2),@PRECNUE DECIMAL(7,2)
		SELECT @PREANT=PRECIO FROM deleted
		SELECT @PRECNUE=PRECIO FROM inserted
			IF (@PREANT<>@PRECNUE)
				BEGIN
					PRINT 'SE MODIFICO EL PRECIO DE UN PRODUCTO'
					PRINT 'PRECIO ANTIGUO:'+ STR(@PREANT,7,2)
					PRINT 'PRECIO NUEVO:'+STR(@PRECNUE,7,2)
				END
GO

--OPCION B
GO
CREATE TRIGGER MODIFICA_PRECIO01
ON [dbo].[PRODUCTOS]
	FOR UPDATE
	AS
		IF (UPDATE(PRECIO))
			BEGIN
				DECLARE @PREANT DECIMAL(7,2),@PRECNUE DECIMAL(7,2)
				SELECT @PREANT=PRECIO FROM deleted
				SELECT @PRECNUE=PRECIO FROM inserted

				PRINT 'SE MODIFICO EL PRECIO DE UN PRODUCTO'
				PRINT 'PRECIO ANTIGUO:'+ STR(@PREANT,7,2)
				PRINT 'PRECIO NUEVO:'+STR(@PRECNUE,7,2)
			END
GO

--EJEMPLO 4
GO

CREATE TRIGGER MODIFICAR_SUELDO
ON [dbo].[PERSONAL]
	FOR UPDATE
		AS
			IF (UPDATE([SUELDO]))
				BEGIN
					ROLLBACK
					PRINT 'NO SE PUEDE MODIFICAR EL SUELDO'
				END
GO

--EJEMPLO 7

GO
CREATE TRIGGER ELIMINA_MARCA
	ON [dbo].[MARCAS]
	for delete	
		AS
			IF ((SELECT COUNT(CODMAR) FROM deleted)>1)
				BEGIN
					ROLLBACK
					PRINT 'SOLO PUEDE ELIMINAR UNA MARCA A LA VEZ'
				END
GO

------------------BD-COLEGIO
USE MASTER
--DEMO 2
GO
CREATE DATABASE COLEGIO_UNI
GO
USE COLEGIO_UNI
GO
CREATE TABLE ALUMNO(
IDALUMNO INT IDENTITY,
DNI NVARCHAR(8)NOT NULL,
APPATERNO NVARCHAR(50)NOT NULL,
APMATERNO NVARCHAR(50)NOT NULL,
NOMBRES NVARCHAR(50)NOT NULL,
EDAD INT,
ESTADO BIT
)
GO

CREATE TABLE NOTA(
CODNOTA INT NOT NULL,
IDALUMNO INT NOT NULL,
CODCURSO INT NOT NULL,
NOTA INT NOT NULL,
OBSERVACION VARCHAR(50) NOT NULL
)
GO
CREATE TABLE CURSO(
CODCURSO INT NOT NULL,
NOMBRECURSO VARCHAR(50) UNIQUE NOT NULL,
FECHA_INI DATE NOT NULL,
FECHA_FINAL DATE NOT NULL,
COSTOCURSO MONEY NOT NULL
)

SELECT * FROM ALUMNO
SELECT * FROM CURSO
SELECT * FROM NOTA

--CREANDO LA PK

/* SINTAXIS

ALTER TABLE NOMBRE_TABLA
ADD CONSTRAINT PK_NOMBRE_TABLA
PRIMARY KEY(COLUMNAX,COLUMNAP,...)
*/
--PK ALUMNO
ALTER TABLE ALUMNO
ADD CONSTRAINT PK_ALUMNO
PRIMARY KEY(IDALUMNO)
--PK NOTA
ALTER TABLE NOTA
ADD CONSTRAINT PK_NOTA
PRIMARY KEY(CODNOTA)
--PK CURSO
ALTER TABLE CURSO
ADD CONSTRAINT PK_CURSO
PRIMARY KEY(CODCURSO)

--LLAVE FORANEA (FK)
/*
ALTER TABLE NOMBRE_TABLA
ADD CONSTRAINT FK_NOMBRE_TABLA_TABLA REFERENCIADA
FOREIGN KEY(COLUMNAX,COLUMNA P)
*/
ALTER TABLE NOTA
ADD CONSTRAINT FK_NOTA_CURSO
FOREIGN KEY(CODCURSO)
REFERENCES CURSO(CODCURSO)

--ALTER AUTHORIZATION ON DATABASE::COLEGIO_UNI TO SA

ALTER TABLE NOTA
ADD CONSTRAINT FK_NOTA_ALUMNO
FOREIGN KEY(IDALUMNO)
REFERENCES ALUMNO(IDALUMNO)

--CREACION DE LA TB HISTORIAL ALUMNO
CREATE TABLE HISTORICO_ALUMNO(
IDALUMNO INT IDENTITY,
DNI NVARCHAR(8)NOT NULL,
APPATERNO NVARCHAR(50)NOT NULL,
APMATERNO NVARCHAR(50)NOT NULL,
NOMBRES NVARCHAR(50)NOT NULL,
EDAD INT,
ESTADO BIT,
FECHAMODIFICACION DATETIME,
VACCION NVARCHAR(50)
)
-----
--IMPLEMENTAR TRIGGER AUDITORIA | HISTORICO ALUMNO
GO
CREATE TRIGGER AUDITORIA_COLEGIO_UNI
	ON [dbo].[ALUMNO]
		AFTER INSERT,UPDATE
			AS BEGIN
				BEGIN
					IF EXISTS(SELECT 1 FROM deleted)
						BEGIN
							INSERT INTO HISTORICO_ALUMNO(DNI,[APPATERNO],[APMATERNO],[NOMBRES],[EDAD],[ESTADO],[FECHAMODIFICACION],[VACCION])
							SELECT D.DNI,D.APPATERNO,D.APMATERNO,D.NOMBRES,D.EDAD,D.ESTADO,GETDATE(),
							(CASE WHEN
								I.ESTADO=0 THEN 'ELIMINADO'
							 ELSE
								'MODIFICADO'
							 END) AS VACCION FROM deleted D JOIN inserted I ON D.DNI=I.DNI
						END
						ELSE
						INSERT INTO HISTORICO_ALUMNO(DNI,[APPATERNO],[APMATERNO],[NOMBRES],[EDAD],[ESTADO],[FECHAMODIFICACION],[VACCION])
						SELECT D.DNI,D.APPATERNO,D.APMATERNO,D.NOMBRES,D.EDAD,D.ESTADO,GETDATE(),'INSERTADO' AS VACCION
						FROM inserted D
				END
			  END


INSERT INTO ALUMNO([DNI],[APPATERNO],[APMATERNO],[NOMBRES],[EDAD],[ESTADO])
VALUES('40623588','AGUILAR','ROJAS','LILIANA',35,1)

--INGRESAR REGISTROS

SELECT * FROM ALUMNO
SELECT * FROM HISTORICO_ALUMNO

UPDATE ALUMNO SET EDAD=25 WHERE DNI='40623588'





INSERT INTO ALUMNO VALUES('1001','02/11/2019','MIGUEL','CUADROS SOLANO')
INSERT INTO ALUMNO VALUES('1002','02/12/2019','DIEGO','VIVANCO FLORES')
INSERT INTO ALUMNO VALUES('1003','02/01/2019','ANDERSON','TORRES JUARES')
INSERT INTO ALUMNO VALUES('1004','02/02/2019','WILLY','CASAS URBINA')

SELECT * FROM CURSO

INSERT INTO CURSO VALUES('100','MODELAMIENTO DE DATOS','01/01/2019','01/30/2019','300')
INSERT INTO CURSO VALUES('101','IMPLEMENTACION SQL ','01/02/2019','01/28/2019','300')
INSERT INTO CURSO VALUES('102','ADMINISTRACION ','01/03/2019','01/30/2019','380')
INSERT INTO CURSO VALUES('103','INTELIGENCIA DE NEGOCIOS ','01/04/2019','01/30/2019','400')

SELECT * FROM NOTA

INSERT INTO NOTA VALUES('050','1000','100',15,'')
INSERT INTO NOTA VALUES('051','1001','100',16,'')
INSERT INTO NOTA VALUES('052','1002','102',20,'')
INSERT INTO NOTA VALUES('053','1003','102',08,'REQUIERE VOLVER A TOMAR EL CURSO')

GO

