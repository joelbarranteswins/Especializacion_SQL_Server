------------------BD-COLEGIO
USE MASTER
--DEMO 2
GO
CREATE DATABASE COLEGIO_UNI
GO
USE COLEGIO_UNI
GO
CREATE TABLE ALUMNO(
IDALUMNO INT IDENTITY,
DNI NVARCHAR(8)NOT NULL,
APPATERNO NVARCHAR(50)NOT NULL,
APMATERNO NVARCHAR(50)NOT NULL,
NOMBRES NVARCHAR(50)NOT NULL,
EDAD INT,
ESTADO BIT
)
GO

CREATE TABLE NOTA(
CODNOTA INT NOT NULL,
IDALUMNO INT NOT NULL,
CODCURSO INT NOT NULL,
NOTA INT NOT NULL,
OBSERVACION VARCHAR(50) NOT NULL
)
GO
CREATE TABLE CURSO(
CODCURSO INT NOT NULL,
NOMBRECURSO VARCHAR(50) UNIQUE NOT NULL,
FECHA_INI DATE NOT NULL,
FECHA_FINAL DATE NOT NULL,
COSTOCURSO MONEY NOT NULL
)

SELECT * FROM ALUMNO
SELECT * FROM CURSO
SELECT * FROM NOTA

--CREANDO LA PK

/* SINTAXIS

ALTER TABLE NOMBRE_TABLA
ADD CONSTRAINT PK_NOMBRE_TABLA
PRIMARY KEY(COLUMNAX,COLUMNAP,...)
*/
--PK ALUMNO
ALTER TABLE ALUMNO
ADD CONSTRAINT PK_ALUMNO
PRIMARY KEY(IDALUMNO)
--PK NOTA
ALTER TABLE NOTA
ADD CONSTRAINT PK_NOTA
PRIMARY KEY(CODNOTA)
--PK CURSO
ALTER TABLE CURSO
ADD CONSTRAINT PK_CURSO
PRIMARY KEY(CODCURSO)

--LLAVE FORANEA (FK)
/*
ALTER TABLE NOMBRE_TABLA
ADD CONSTRAINT FK_NOMBRE_TABLA_TABLA REFERENCIADA
FOREIGN KEY(COLUMNAX,COLUMNA P)
*/
ALTER TABLE NOTA
ADD CONSTRAINT FK_NOTA_CURSO
FOREIGN KEY(CODCURSO)
REFERENCES CURSO(CODCURSO)

--ALTER AUTHORIZATION ON DATABASE::COLEGIO_UNI TO SA

ALTER TABLE NOTA
ADD CONSTRAINT FK_NOTA_ALUMNO
FOREIGN KEY(IDALUMNO)
REFERENCES ALUMNO(IDALUMNO)

--CREACION DE LA TB HISTORIAL ALUMNO
CREATE TABLE HISTORICO_ALUMNO(
IDALUMNO INT IDENTITY,
DNI NVARCHAR(8)NOT NULL,
APPATERNO NVARCHAR(50)NOT NULL,
APMATERNO NVARCHAR(50)NOT NULL,
NOMBRES NVARCHAR(50)NOT NULL,
EDAD INT,
ESTADO BIT,
FECHAMODIFICACION DATETIME,
VACCION NVARCHAR(50)
)


--INSERT 15 REGISTROS EN LA TABLA ALUMNOS
--USANDO SOLO UNA VEZ EL ISERT INTO
INSERT INTO ALUMNO(DNI,APPATERNO,APMATERNO,NOMBRES,EDAD,ESTADO)
VALUES('12345678','GARCIA','GARCIA','JUAN',20,1),
('12345679','GARCIA','GARCIA','PEDRO',20,1),
('12345680','GARCIA','GARCIA','JUAN',20,1),
('12345681','GARCIA','GARCIA','JUAN',20,1),
('12345682','GARCIA','GARCIA','JUAN',20,1),
('12345683','GARCIA','GARCIA','JUAN',20,1),
('12345684','GARCIA','GARCIA','JUAN',20,1),
('12345685','GARCIA','GARCIA','JUAN',20,1),
('12345686','GARCIA','GARCIA','JUAN',20,1),
('12345687','GARCIA','GARCIA','JUAN',20,1),
('12345688','GARCIA','GARCIA','JUAN',20,1),
('12345689','GARCIA','GARCIA','JUAN',20,1),
('12345690','GARCIA','GARCIA','JUAN',20,1),
('12345691','GARCIA','GARCIA','JUAN',20,1),
('12345692','GARCIA','GARCIA','JUAN',20,1);
GO


/*

--CREA UNA FUNCIONCION QUE ME DIGA SI EL ALUMNO EXISTE O NO
CREATE FUNCTION FN_EXISTE_ALUMNO(@DNI NVARCHAR(8))
    RETURNS BIT
    AS
        BEGIN
            DECLARE @EXISTE BIT
            SELECT @EXISTE=COUNT(*)
            FROM ALUMNO
            WHERE DNI=@DNI
            RETURN @EXISTE
        END
GO


SELECT DBO.FN_EXISTE_ALUMNO('12345678')
GO

	*/